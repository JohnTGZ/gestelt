<launch>
    <!-- Drone id -->
    <arg name="drone_id"/>
    <arg name="drone_id_ns" value="drone$(arg drone_id)"/>
    <!-- Drone formation params -->
    <arg name="num_drones"/>
    <!-- Map params -->
    <arg name="map_size_x_"/>
    <arg name="map_size_y_"/>
    <arg name="map_size_z_"/>
    <arg name="obj_num_set"/>
    <!-- Sensor input type -->
    <arg name="POSE_TYPE"/>
    <arg name="SENSOR_TYPE"/>
    <arg name="drone_origin_frame" default="world"/>
    <arg name="global_frame" default="world"/>
    <arg name="cam_frame" default="cam_link"/>
    <!-- Subscribed topics -->
    <arg name="odometry_topic"/>
    <arg name="pose_topic"/>
    <arg name="depth_topic"/>
    <arg name="cloud_topic"/>
    <!-- Planner params -->
    <arg name="max_vel"/>
    <arg name="max_acc"/>
    <arg name="max_jer"/>
    <arg name="planning_horizon"/>
    <arg name="use_distinctive_trajs"/>
    <arg name="thresh_replan_time"/>
    <arg name="thresh_no_replan_meter"/>
    <!-- Goal definition  -->
    <arg name="waypoint_type"/>

    <!-- <node pkg="ego_planner_fsm" name="ego_planner_fsm_node" type="ego_planner_fsm_node" output="screen" launch-prefix="valgrind"> -->
    <node pkg="ego_planner_fsm" name="drone_$(arg drone_id)_ego_planner_node" type="ego_planner_fsm_node" output="screen">
        <remap from="~mandatory_stop" to="/mandatory_stop_to_planner"/>
        <remap from="~planning/broadcast_traj_send" to = "/broadcast_traj_from_planner"/>
        <remap from="~planning/broadcast_traj_recv" to = "/broadcast_traj_to_planner"/>
        
        <!-- //////////////////// -->
        <!-- FSM params -->
        <!-- //////////////////// -->
        <!-- waypoint_type: 1 for manual publishing of goals, 2 for preset waypoints, as defined by fsm/waypointX param -->
        <param name="fsm/waypoint_type" value="$(arg waypoint_type)" type="int"/>
        <!-- thresh_replan_time: Replanning period (1/frequency)-->
        <param name="fsm/thresh_replan_time" value="$(arg thresh_replan_time)" type="double"/>
        <!-- thresh_no_replan_meter: Replan only if current position and local target exceeds this parameter -->
        <param name="fsm/thresh_no_replan_meter" value="$(arg thresh_no_replan_meter)" type="double"/>
        <!-- planning_horizon: Distance to plan for local target -->
        <param name="fsm/planning_horizon" value="$(arg planning_horizon)" type="double"/>
        <!-- Always set to 1.5 times greater than sensing horizon-->
        <param name="fsm/emergency_time" value="1.0" type="double"/>
        <param name="fsm/fail_safe" value="true"/>

        <param name="fsm/pub_state_freq" value="10.0" type="double"/>
        <param name="fsm/pub_heartbeat_freq" value="10.0" type="double"/>
        <param name="fsm/tf_lookup_timeout" value="60.0" type="double"/>

        <!-- Subscribed topics -->
        <remap from="~fsm_odom" to="$(arg odometry_topic)"/>

        <!-- Published topics -->
        <remap from="~plan_time_benchmark" to = "/drone$(arg drone_id)/plan_time_benchmark"/>
        <remap from="~planner_state" to = "/$(arg drone_id_ns)/planner_state"/>
        <remap from="~planning/trajectory" to = "/drone_$(arg drone_id)_planning/trajectory"/>
        <remap from="~planning/data_display" to = "/drone_$(arg drone_id)_planning/data_display"/>
        <remap from="~planning/heartbeat" to = "/drone_$(arg drone_id)_traj_server/heartbeat"/>

        <!-- //////////////////// -->
        <!-- GridMap params -->
        <!-- //////////////////// -->
        <!-- Published topics -->
        <remap from="~grid_map/occupancy" to = "$(arg drone_id_ns)/grid_map/occupancy"/>
        <!-- Subscribed topics -->
        <remap from="~grid_map/odom" to = "$(arg odometry_topic)"/>
        <remap from="~grid_map/pose" to = "$(arg pose_topic)"/>
        <remap from="~grid_map/cloud" to = "$(arg cloud_topic)"/>
        <remap from="~grid_map/depth" to = "$(arg depth_topic)"/>
        <remap from="~grid_map/camera_info" to="/drone$(arg drone_id)/camera/depth/camera_info"/>
        <!-- Maps params -->
        <param name="grid_map/ground_height" value="-0.25"/>
        <param name="grid_map/map_size_x" value="$(arg map_size_x_)" />
        <param name="grid_map/map_size_y" value="$(arg map_size_y_)" />
        <param name="grid_map/map_size_z" value="$(arg map_size_z_)" />
        <param name="grid_map/local_map_size_x" value="5.5" />
        <param name="grid_map/local_map_size_y" value="5.5" />
        <param name="grid_map/local_map_size_z" value="2.0" />

        <param name="grid_map/global_frame" value="$(arg global_frame)"/>
        <param name="grid_map/uav_origin_frame" value="$(arg drone_origin_frame)"/>
        <param name="grid_map/cam_frame" value="$(arg drone_id_ns)_$(arg cam_frame)"/>
        <!-- Occupancy grid params -->
        <param name="grid_map/occ_grid/resolution" value="0.1" />
        <param name="grid_map/occ_grid/inflation" value="0.15" />
        <!-- Point cloud downsampling params -->
        <param name="grid_map/filter/downsample_cloud" value="false" />
        <param name="grid_map/filter/depth_stride" value="4" />
        <param name="grid_map/filter/voxel_size" value="0.1" />

        <!-- grid_map/pose_type: Toggle between subscription to
            1 ("grid_map/pose") or 
            2 ("grid_map/odom") or
            3 ("/tf") 
            for use as camera pose/odom-->
        <param name="~grid_map/pose_type" value = "$(arg POSE_TYPE)"/>
        <!-- grid_map/sensor_type: Toggle between subscription to
            1 ("grid_map/cloud") or 
            2 ("grid_map/depth") or 
            3 ("grid_map/cloud") [For use with POSE_TYPE 3]
            for use as camera sensor input -->
        <param name="~grid_map/sensor_type" value="$(arg SENSOR_TYPE)"/>

        <!-- camera intrinsic parameters -->
        <param name="grid_map/k_depth_scaling_factor" value="1000.0"/>
        <!-- camera extrinsic parameters -->
        <param name="grid_map/camera_to_body/roll" value="90.0"/>
        <param name="grid_map/camera_to_body/pitch" value="180.0"/>
        <param name="grid_map/camera_to_body/yaw" value="90.0"/>
        <param name="grid_map/camera_to_body/t_x" value="0.0"/>
        <param name="grid_map/camera_to_body/t_y" value="0.0"/>
        <param name="grid_map/camera_to_body/t_z" value="0.0"/>
        <!-- //////////////////// -->
        <!-- Manager params -->
        <!-- //////////////////// -->
        <param name="manager/drone_id" value="$(arg drone_id)"/>
        <!-- planner manager -->
        <param name="manager/max_vel" value="$(arg max_vel)" type="double"/>
        <param name="manager/max_acc" value="$(arg max_acc)" type="double"/>
        <param name="manager/polyTraj_piece_length" value="1.5" type="double"/>
        <param name="manager/feasibility_tolerance" value="0.05" type="double"/>
        <param name="manager/planning_horizon" value="$(arg planning_horizon)" type="double"/>
        <param name="manager/use_distinctive_trajs" value="$(arg use_distinctive_trajs)" type="bool"/>
        <!-- //////////////////// -->
        <!-- optimization params -->
        <!-- //////////////////// -->
        <param name="optimization/constraint_points_perPiece" value="5" type="int"/>
        <param name="optimization/weight_obstacle" value="10000.0" type="double"/>
        <param name="optimization/weight_obstacle_soft" value="5000.0" type="double"/>
        <param name="optimization/weight_swarm" value="10000.0" type="double"/>
        <param name="optimization/weight_feasibility" value="10000.0" type="double"/>
        <param name="optimization/weight_sqrvariance" value="10000.0" type="double"/>
        <param name="optimization/weight_time" value="10.0" type="double"/>
        <param name="optimization/weight_formation" value="100" type="double"/>
        <param name="optimization/obstacle_clearance" value="0.35" type="double"/>
        <param name="optimization/obstacle_clearance_soft" value="0.5" type="double"/>
        <param name="optimization/swarm_clearance" value="0.15" type="double"/>
        <param name="optimization/max_vel" value="$(arg max_vel)" type="double"/>
        <param name="optimization/max_acc" value="$(arg max_acc)" type="double"/>
        <param name="optimization/max_jer" value="$(arg max_jer)" type="double"/>
        <!-- formation: Affects the target position of the drone relative to the goal-->
        <param name="formation/num" value="$(arg num_drones)"/>
        <rosparam param="formation/start">[0, 0, 0]</rosparam>
        <!-- <rosparam param="formation/drone0">[  0, 0, 0]</rosparam> -->
        <rosparam param="formation/drone0">[ 1.0, 0.0, 0]</rosparam>
        <rosparam param="formation/drone1">[ 0.0, -1.0, 0]</rosparam>
        <rosparam param="formation/drone2">[ -1.0, 0.0, 0]</rosparam>
        <rosparam param="formation/drone3">[ 0.0, 1.0, 0]</rosparam>
        
        <rosparam param="formation/drone4">[ 1.0, -1.0, 0]</rosparam>
        <rosparam param="formation/drone5">[ -1.0, -1.0, 0]</rosparam>
        <rosparam param="formation/drone6">[ -1.0, 1.0, 0]</rosparam>
        <rosparam param="formation/drone7">[ 1.0, 1.0, 0]</rosparam>

        <rosparam param="formation/drone8">[ 0.0, -2.0, 0]</rosparam>
        <rosparam param="formation/drone9">[ -2.0, 0.0, 0]</rosparam>
        <rosparam param="formation/drone10">[ 0.0, 2.0, 0]</rosparam>
        <rosparam param="formation/drone11">[ 2.0, 0.0, 0]</rosparam>

    </node>
</launch>
