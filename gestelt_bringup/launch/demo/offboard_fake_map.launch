<launch>
  <arg name="drone_id"/>
  <arg name="drone_id_ns" value="drone$(arg drone_id)"/>
  <arg name="map_filepath" value="$(find gestelt_bringup)/simulation/fake_map_worlds/demo_map.pcd" />
  <!-- Input/output topics -->
  <arg name="pose_topic" value="mavros/local_position/pose" />
  <arg name="cloud_topic_fake" value="camera/depth/points_fake" />
  <arg name="cloud_topic_ds" value="camera/depth/points_downsampled" />
  <!-- drone_origin_frame: For PX4 SITL, leave it as default. 
  For actual deployment, put as world -->
  <arg name="drone_origin_frame" default="world" />
  <param name="/use_sim_time" value="false" />

  <!-- Fake sensor data node -->
  <node pkg="fake_map" type="fake_map_node" name="fake_map_node_$(arg drone_id_ns)" output="screen">
    <param name="map/filepath" value="$(arg map_filepath)"/>
    <!-- Publisher of uav sensor cloud -->
    <remap from="uav/sensor_cloud" to="/$(arg drone_id_ns)/$(arg cloud_topic_fake)"/>

    <rosparam command="load" file="$(find gestelt_bringup)/config/fake_laser_params.yaml" />
    <param name="uav/id" value="$(arg drone_id_ns)"/>
    <param name="uav/global_frame" value="world"/>
    <param name="uav/origin_frame" value="$(arg drone_origin_frame)"/>
    <param name="uav/sensor_frame" value="$(arg drone_id_ns)_cam_link"/>
    <param name="uav/tf_listen_freq" value="30.0"/>
  </node>

  <!-- Downsamples the input cloud -->
  <node pkg="central_benchmark" type="cloud_downsampler" 
    name="$(arg drone_id_ns)_cloud_downsampler" output="screen">
    <param name="~queue_size" value="3" />
    <param name="~voxel_size" value="0.1" />

    <remap from="~cloud_in" to="/$(arg drone_id_ns)/$(arg cloud_topic_fake)" />
    <remap from="~cloud_out" to="/$(arg drone_id_ns)/$(arg cloud_topic_ds)" />
  </node>

</launch>
