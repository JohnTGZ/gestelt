<launch>
  <!-- num_drones must be at least 2 even if we are planning for a single drone -->
  <arg name="num_drones" value="5"/>
  <!-- size of map, change the size inflate x, y, z according to your application -->
  <arg name="map_size_x" value="80.0"/>
  <arg name="map_size_y" value="80.0"/>
  <arg name="map_size_z" value=" 3.0"/>
  <!-- Input/output topics -->
  <arg name="command_topic" value="mavros/setpoint_raw/local" />
  <arg name="odometry_topic" value="mavros/local_position/odom" />
  <arg name="pose_topic" value="mavros/local_position/pose" />
  <arg name="point_cloud_topic" value="map" />
  <arg name="depth_img_topic" value="camera/depth/image_raw" />

  <!-- swarm topic transmitter bridge-->
  <!-- This bridge subscribes to and re-broadcasts the trajectories of all drones -->
  <include file="$(find swarm_bridge)/launch/bridge_udp.launch">
    <arg name="drone_id" value="999"/>
    <arg name="broadcast_ip" value="127.0.0.255"/>
  </include>

  <!-- Collision checker -->
  <node pkg="gestelt_bringup" type="swarm_collision_checker" 
    name="swarm_collision_checker" output="screen">
    <param name="~num_drones" value="$(arg num_drones)" />
    <param name="~collision_tolerance" value="0.6" />
    <param name="~check_collision_freq" value="10.0" />
  </node>

  <!-- Add static transform from world to map -->
  <node pkg="tf" type="static_transform_publisher" 
    name="world_to_map_tf" 
    args="0 0 0 0 0 0 1 world map 100" />

  <!-- Drone 0 -->
  <include file="$(find gestelt_bringup)/launch/radxa/single_tf.launch">
    <arg name="drone_id"   value="0"/>
    <arg name="init_x"     value="1.0"/>
    <arg name="init_y"     value="-1.0"/>
    <arg name="init_z"     value="0.0"/>
  </include>

</launch>
