<launch>
  <arg name="drone_id" default="0"/>
  <arg name="drone_id_ns" value="drone$(arg drone_id)"/>
  <arg name="navigator_cfg_filepath" default="$(find gestelt_bringup)/config/navigator.yaml"/>

  <arg name="cloud_topic" default="camera/depth/points"/>
  <arg name="odometry_topic" default="mavros/local_position/odom" />

  <arg name="global_frame" default="world"/>
  <arg name="uav_origin_frame" default="world"/>
  <arg name="cam_frame" default="cam_link"/>

  <arg name="map_filepath" default="$(find gestelt_bringup)/simulation/fake_maps/forest_single.pcd" />

  <arg name="grid_agent_cfg_filepath" default="$(find gestelt_bringup)/config/fake_drone_params.yaml"/>

  <!-- <arg name="scenario" default="voronoi_test1"/> -->
  <arg name="scenario" default="voronoi_test1"/>

  <!-- Add static transform from world to map -->
  <node pkg="tf" type="static_transform_publisher" 
    name="world_to_map_tf" args="0 0 0 0 0 0 1 world map 100"> </node>

      <!-- launch-prefix="valgrind" -->

  <node pkg="voronoi_planner" type="voronoi_planner_node" 
      name="voronoi_planner_node" 
      required="true" output="screen">
    <rosparam command="load" file="$(find voronoi_planner)/config/voronoi_planner.yaml" />

    <rosparam command="load" file="$(arg navigator_cfg_filepath)" />

    <param name="drone_id" value="$(arg drone_id)"/>

    <param name="front_end/debug_planning" value="false"/>

    <remap from="odom" to="$(arg odometry_topic)"/>

    <remap from="grid_map/odom" to="$(arg odometry_topic)"/>
    <remap from="grid_map/cloud" to="$(arg cloud_topic)"/>

    <param name="grid_map/global_frame" value="$(arg global_frame)"/>
    <param name="grid_map/uav_origin_frame" value="$(arg uav_origin_frame)"/>
    <param name="grid_map/cam_frame" value="$(arg drone_id_ns)_$(arg cam_frame)"/>

    <param name="grid_map/pose_type" value="2"/>
    <param name="grid_map/sensor_type" value="1"/>

    <!-- For debugging use -->
    <param name="grid_map/debug_input_entire_map" value="true"/>
    <param name="grid_map/entire_pcd_map_topic" value="/fake_map"/>

  </node>

  <!-- Fake map publisher -->
  <node pkg="fake_map" type="fake_map_publisher" name="fake_map_publisher" output="screen">
      <remap from="/fake_map" to="/fake_map"/>

      <param name="map/file_path" value="$(arg map_filepath)"/>
      <param name="map/publish_freq" value="1.0"/>
      <param name="map/frame_id" value="world"/>
  </node>

  <!-- Launches a test mission -->
  <node pkg="gestelt_bringup" name="$(arg scenario)_mission" 
    type="$(arg scenario).py" output="screen" />

  <node name="rviz" pkg="rviz" type="rviz" required="true" 
        args="-d $(find gestelt_bringup)/launch/rviz/testing.rviz"/>


  <!-- Fake drone 0 -->
  <group ns="drone0">
    <node pkg="fake_drone" type="grid_agent_node" name="grid_agent_0" required="true" output="screen">
        <rosparam command="load" file="$(arg grid_agent_cfg_filepath)" />

        <!-- <remap from="mavros/local_position/odom" to="$(arg odometry_topic)"/>
        <remap from="mavros/local_position/pose" to="$(arg pose_topic)"/> -->

        <param name="drone_id" value="0"/>
        <param name="init_x" value="0.0"/>
        <param name="init_y" value="0.0"/>
        <param name="init_z" value="0.0"/>

        <param name="origin_frame" value="local_map_origin"/>
        <param name="base_link_frame" value="drone0_base_link"/>
    </node>
  </group>

  <!-- Fake drone 1 -->
  <group ns="drone1">
    <node pkg="fake_drone" type="grid_agent_node" name="grid_agent_1" required="true" output="screen">
        <rosparam command="load" file="$(arg grid_agent_cfg_filepath)" />

        <!-- <remap from="mavros/local_position/odom" to="$(arg odometry_topic)"/>
        <remap from="mavros/local_position/pose" to="$(arg pose_topic)"/> -->

        <param name="drone_id" value="1"/>
        <param name="init_x" value="0.0"/>
        <param name="init_y" value="0.0"/>
        <param name="init_z" value="0.0"/>

        <param name="origin_frame" value="local_map_origin"/>
        <param name="base_link_frame" value="drone1_base_link"/>
    </node>
  </group>

  <!-- Fake drone 2 -->
  <group ns="drone2">
    <node pkg="fake_drone" type="grid_agent_node" name="grid_agent_2" required="true" output="screen">
        <rosparam command="load" file="$(arg grid_agent_cfg_filepath)" />

        <!-- <remap from="mavros/local_position/odom" to="$(arg odometry_topic)"/>
        <remap from="mavros/local_position/pose" to="$(arg pose_topic)"/> -->

        <param name="drone_id" value="2"/>
        <param name="init_x" value="0.0"/>
        <param name="init_y" value="0.0"/>
        <param name="init_z" value="0.0"/>

        <param name="origin_frame" value="local_map_origin"/>
        <param name="base_link_frame" value="drone2_base_link"/>
    </node>
  </group>

  <!-- Fake drone 3 -->
  <group ns="drone3">
    <node pkg="fake_drone" type="grid_agent_node" name="grid_agent_3" required="true" output="screen">
        <rosparam command="load" file="$(arg grid_agent_cfg_filepath)" />

        <!-- <remap from="mavros/local_position/odom" to="$(arg odometry_topic)"/>
        <remap from="mavros/local_position/pose" to="$(arg pose_topic)"/> -->

        <param name="drone_id" value="3"/>
        <param name="init_x" value="0.0"/>
        <param name="init_y" value="0.0"/>
        <param name="init_z" value="0.0"/>

        <param name="origin_frame" value="local_map_origin"/>
        <param name="base_link_frame" value="drone3_base_link"/>
    </node>
  </group>

  <!-- Fake drone 4 -->
  <group ns="drone4">
    <node pkg="fake_drone" type="grid_agent_node" name="grid_agent_4" required="true" output="screen">
        <rosparam command="load" file="$(arg grid_agent_cfg_filepath)" />

        <!-- <remap from="mavros/local_position/odom" to="$(arg odometry_topic)"/>
        <remap from="mavros/local_position/pose" to="$(arg pose_topic)"/> -->

        <param name="drone_id" value="4"/>
        <param name="init_x" value="0.0"/>
        <param name="init_y" value="0.0"/>
        <param name="init_z" value="0.0"/>

        <param name="origin_frame" value="local_map_origin"/>
        <param name="base_link_frame" value="drone4_base_link"/>
    </node>
  </group>


</launch>
